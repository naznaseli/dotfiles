{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"for": {
		"prefix": "for",
		"body": [
			"for (size_t i = 0; i < $1; i++)",
			"{",
			"    $2",
			"}",
			"$0"
		],
		"description": "for statement"
	},
	"class": {
		"prefix": "class",
		"body": [
			"class $1",
			"{",
			"public:",
			"    $1();",
			"    ~$1();",
			"    $0",
			"private:",
			"};",
		],
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ($1)",
			"{",
			"    $2",
			"}",
			"$0"
		]
	},
	"else": {
		"prefix": "else",
		"body": [
			"else",
			"{",
			"    $1",
			"}",
			"$0"
		]
	},
	"else if": {
		"prefix": "else if",
		"body": [
			"else if ($1)",
			"{",
			"    $2",
			"}",
			"$0"
		]
	},
	"int main": {
		"prefix": "int main",
		"body": [
			"int main(int argc, char** argv)",
			"{",
			"    $0",
			"}"
		]
	},
	"printf": {
		"prefix": "printf",
		"body": [
			"printf(\"$1\"$2);$0",
		]
	}
}
